{"version":3,"sources":["components/common/logo.png","config.js","components/common/Loading.js","components/common/Search.js","components/common/Header.js","helpers.js","components/List/Table.js","components/List/Pagination.js","components/List/List.js","components/Detail/Detail.js","App.js","index.js"],"names":["module","exports","API_URL","Loading","width","height","className","style","defaultProps","withRouter","props","useState","searchQuery","setSearchQuery","loading","setLoading","searchResults","setSearchResults","handleChange","e","a","target","value","fetch","response","json","data","type","placeholder","onChange","length","map","result","key","id","onClick","currencyId","console","log","history","push","name","symbol","Header","to","src","logo","alt","renderChangePercent","changePercent","currencies","currency","rank","price","marketCap","percentChange24h","Pagination","page","totalPages","handlePaginationClick","disabled","List","setCurrencies","setTotalPages","match","params","setPage","error","setError","fetchCurrencies","ok","Error","errorMessage","useEffect","direction","nextPage","Detail","pathName","location","pathname","setCurrency","volume24h","totalSupply","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42bfff10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5c0436d5.png\";","export const API_URL = 'https://api.udilia.com/coins/v1';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Loading.css';\nconst Loading = ({width, height}) => {\n    return (\n        <div\n            className=\"Loading\" \n            style={{width, height}}\n        />\n    )\n}\nLoading.propTypes = {\n    width: PropTypes.string,\n    height: PropTypes.string\n}\nLoading.defaultProps = {\n    width: '53px',\n    height: '53px'\n}\nexport default Loading;","import React, {useState} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport Loading from '../common/Loading';\nimport './Search.css';\nconst Search = (props) => {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [loading, setLoading] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleChange = async (e) => {\n        const searchQuery = e.target.value;\n        setSearchQuery(searchQuery);\n        setLoading(true);\n        if(!searchQuery) {\n            return false;\n        }\n        try {\n            const response = await fetch(`${API_URL}/autocomplete?searchQuery=${searchQuery}`);\n            const data = await response.json();\n            setLoading(false);\n            setSearchResults(data);\n        }catch(error) {\n\n        }\n    }\n   \n    const handleRedirect = (currencyId) => {\n        setSearchQuery('');\n        setSearchResults([]);\n        console.log(currencyId);\n        props.history.push(`/currency/${currencyId}`)\n\n    }\n    const renderSearchResults = () => {\n        if(!searchQuery) {\n            return ''\n        }\n        if(searchResults.length > 0) {\n            return (\n                <div className=\"Search-result-container\">\n                    {\n                       searchResults.map(result => (\n                           <div\n                            key={result.id}\n                            className=\"Search-result\"\n                            onClick={() => handleRedirect(result.id)}\n                           >\n                                {result.name} ({result.symbol})\n                            </div>\n                       )) \n                    }\n                </div>\n            )\n        }\n           \n       return (\n           <div className=\"Search-result-container\">\n                <div className=\"Search-no-result\">\n                    No results found.\n                </div>\n           </div>\n       )\n      \n    }\n    return (\n        <div className=\"Search\">\n            <div>\n                <span className=\"Search-icon\" />\n                <input \n                    type=\"text\"\n                    placeholder=\"Currency name\"\n                    className=\"Search-input\"\n                    onChange={handleChange}\n                    value={searchQuery}\n                />\n                {\n                    loading && searchQuery &&\n                    (\n                        <div className=\"Search-loading\">\n                            <Loading \n                                width=\"15px\"\n                                height=\"15px\"\n                            />\n                        </div>\n                    )\n                }\n            </div>\n            {renderSearchResults()}\n        </div>\n    )\n}\nexport default withRouter(Search);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Search from './Search';\nimport logo from './logo.png';\nimport './Header.css';\nconst Header = () => {\n    return (\n        <header className=\"Header\">\n            <Link to=\"/\">\n                <img \n                    src={logo}\n                    alt=\"logo\"\n                    className=\"Header-logo\"\n                />\n            </Link>\n\n            <Search />\n        </header>\n    )\n}\nexport default Header;","import React from 'react';\nexport const renderChangePercent = changePercent => {\n    if(changePercent > 0) {\n        return <span className=\"percent-raised\">{changePercent}% &uarr;</span>\n    }else if(changePercent < 0) {\n        return <span className=\"percent-fallen\">{changePercent}% &darr;</span>\n    }else {\n        return <span>{changePercent}</span>\n    }\n}","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { renderChangePercent } from '../../helpers';\nimport './Table.css';\nconst Table = (props) => {\n    const { history } = props;\n    const { currencies} = props;\n    return (\n        <div className=\"Table-container\">\n            <table className=\"Table\">\n                <thead className=\"Table-head\">\n                    <tr>\n                        <th>Cryptocurrency</th>\n                        <th>Price</th>\n                        <th>Market Cap</th>\n                        <th>24H Change</th>\n                    </tr>\n                </thead>\n                <tbody className=\"Table-body\">\n                    {\n                        currencies.map(currency => (\n                            <tr\n                                key={currency.id}\n                                onClick={() => history.push(`/currency/${currency.id}`)}\n                            >\n                                <td>\n                                    <span className=\"Table-rank\">{currency.rank}</span>\n                                    {currency.name}\n                                </td>\n\n                                <td>\n                                    <span className=\"Table-dollar\">$</span>\n                                    {currency.price}\n                                </td>\n\n                                <td>\n                                    <span className=\"Table-dollar\">$</span>\n                                    {currency.marketCap}\n                                </td>\n\n                                <td>{renderChangePercent(currency.percentChange24h)}</td>\n                            </tr>\n                        ))\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}\nexport default withRouter(Table);","import React from 'react';\nimport './Pagination.css';\nconst Pagination = (props) => {\n    const { page, totalPages, handlePaginationClick } = props;\n    return (\n        <div className=\"Pagination\">\n            <button\n                className=\"Pagination-button\"\n                onClick={() => handlePaginationClick('prev')}\n                disabled={page <= 1}\n            >\n                &larr;\n            </button>\n                <span className=\"Pagination-info\">\n                    Page <b>{page}</b> of <b>{totalPages}</b>\n                </span>\n            <button\n                className=\"Pagination-button\"\n                onClick={() => handlePaginationClick('next')}\n                disabled={page >= totalPages}\n            >\n                 &rarr;\n            </button>\n            \n        </div>\n    )\n}\nexport default Pagination;","import React, { useState, useEffect } from 'react';\nimport { API_URL } from '../../config';\nimport Loading from '../common/Loading';\nimport Table from './Table';\nimport Pagination from './Pagination';\n\nconst List = (props) => {\n    const { history } = props;\n    const [loading, setLoading] = useState(false);\n    const [currencies, setCurrencies] = useState([]);\n    const [totalPages, setTotalPages] = useState(0);\n    const [page, setPage] = useState(\n        props.match.params.id ? +props.match.params.id : 1\n    );\n    const [error, setError]= useState('');\n    \n    const fetchCurrencies = async () => {\n        setLoading(true)\n        try {\n            const response = await fetch(`${API_URL}/cryptocurrencies?page=${page}&perPage=20`);\n            if(response.ok) {\n                const data = await response.json();\n                setLoading(false);\n                setCurrencies(data.currencies);\n                setTotalPages(data.totalPages)\n                \n            }else {\n                const error = await response.json();\n                throw new Error(error.errorMessage);\n            }\n\n        }catch(error) {\n            setLoading(false);\n            setError('Currency with given id not found.')\n        }\n    }\n    \n    const handlePaginationClick = (direction) => {\n        let nextPage = page;\n        nextPage = direction === 'next' ? nextPage + 1 : nextPage - 1;\n        setPage(nextPage);\n    }\n\n    useEffect(() => {\n        fetchCurrencies();\n        history.push(`/page/${page}`)\n    },[page]); //i love you hooks tanks react js ))\n\n    if(loading) {\n        return <div className=\"loading-container\"><Loading /></div>\n    }\n    if(error) {\n        return <div className=\"error\">{error}</div>\n    }\n\n    return (\n        <div>\n            <Table currencies={currencies}/>\n            <Pagination \n                page={page}\n                totalPages={totalPages}\n                handlePaginationClick={handlePaginationClick}\n            />\n        </div>\n    )\n}\nexport default List;","import React, { useState, useEffect } from 'react';\nimport { API_URL } from '../../config';\nimport { renderChangePercent } from '../../helpers';\nimport Loading from '../common/Loading';\nimport './Detail.css';\nconst Detail = (props) => {\n   const currencyId = props.match.params.id;\n   const pathName = props.location.pathname;\n   const [currency, setCurrency] = useState({});\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState(null);\n   \n   useEffect(() => {\n    setLoading(true);\n        ( async () => {\n            try {\n                const response = await fetch(`${API_URL}/cryptocurrencies/${currencyId}`);\n                if(response.ok) {\n                    const data = await response.json();\n                    setCurrency(data);\n                    setLoading(false);\n                }else {\n                    const error = await response.json();\n                    throw new Error(error.errorMessage);\n                }\n            }catch(error) {\n                setLoading(false);\n                setError('Currency with given id not found.')\n            }\n\n        })()\n   },[pathName])\n\n    if(loading) {\n        return <div className=\"loading-container\"><Loading /></div>\n    }\n    if(error) {\n        return <div className=\"error\">{error}</div>\n    }\n    \n    return (\n        <div className=\"Detail\">\n             <h1 className=\"Detail-heading\">\n                {currency.name} ({currency.symbol})\n            </h1>\n\n             <div className=\"Detail-container\">\n                <div className=\"Detail-item\">\n                    Price <span className=\"Detail-value\">$ {currency.price}</span>\n                </div>\n\n                <div className=\"Detail-item\">   \n                    Rank <span className=\"Detail-value\">{currency.rank}</span>\n                </div>\n\n                <div className=\"Detail-item\">\n                    24H Change\n                    <span className=\"Detail-value\">{renderChangePercent(currency.percentChange24h)}</span>\n                </div>\n\n\n                <div className=\"Detail-item\">\n                    <span className=\"Detail-title\">Market cap</span>\n                    <span className=\"Detail-dollar\">$</span>\n                    {currency.marketCap}\n                </div>\n\n                 <div className=\"Detail-item\">\n                    <span className=\"Detail-title\">24H Volume</span>\n                    <span className=\"Detail-dollar\">$</span>\n                    {currency.volume24h}\n                </div>\n\n\n                <div className=\"Detail-item\">\n                    <span className=\"Detail-title\">Total supply</span>\n                    {currency.totalSupply}\n                </div>\n             </div>\n             \n        </div>\n    )\n}\nexport default Detail;","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Header from './components/common/Header';\nimport List from './components/List/List';\nimport Detail from './components/Detail/Detail';\nimport './App.css';\n\nconst App = (props) => {\n  const {location} = props;\n  return (\n    <div className=\"App\">\n        <Header />\n        <Switch>\n            <Route \n              path={location.pathname === '/' ? '/' : '/page/:id'} \n              component={List}\n            />\n            <Route path=\"/currency/:id\" component={Detail} />\n        </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n document.getElementById('root'));\n"],"sourceRoot":""}